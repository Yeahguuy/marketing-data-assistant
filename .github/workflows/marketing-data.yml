# analytics/scripts/facebook_ads_pull.py
import os, sys, time, requests, pandas as pd

TOKEN = os.environ.get("FB_ACCESS_TOKEN")
ACCOUNT = os.environ.get("FB_AD_ACCOUNT_ID")         # act_###########
API_VER = os.environ.get("FB_API_VER", "v20.0")
LOOKBACK = int(os.environ.get("FB_LOOKBACK_DAYS", "7"))
OUT = os.environ.get("FB_OUT_FILE", "analytics/dataprocessed/facebook_live_ads.csv")

# sanity checks
missing = [k for k,v in {"FB_ACCESS_TOKEN": TOKEN, "FB_AD_ACCOUNT_ID": ACCOUNT}.items() if not v]
if missing:
    sys.exit(f"Missing env vars: {', '.join(missing)}")

# fields MUST be a comma string... no braces
FIELDS = [
    "date_start","date_stop",
    "campaign_id","campaign_name",
    "adset_id","adset_name",
    "ad_id","ad_name",
    "impressions","clicks","unique_clicks",
    "spend","cpc","ctr","cpm","reach","inline_link_clicks"
]
fields_str = ",".join(FIELDS)

params = {
    "level": "ad",
    "date_preset": f"last_{LOOKBACK}d",
    "fields": fields_str,
    "limit": 5000
}
url = f"https://graph.facebook.com/{API_VER}/{ACCOUNT}/insights"

session = requests.Session()
session.headers.update({"Authorization": f"Bearer {TOKEN}"})

all_rows = []
while True:
    r = session.get(url, params=params, timeout=60)
    if not r.ok:
        sys.exit(f"[ERROR] Facebook API error {r.status_code}: {r.text}")
    payload = r.json()
    all_rows.extend(payload.get("data", []))
    next_url = payload.get("paging", {}).get("next")
    if not next_url:
        break
    url, params = next_url, {}
    time.sleep(0.2)

df = pd.DataFrame(all_rows)
os.makedirs(os.path.dirname(OUT), exist_ok=True)
df.to_csv(OUT, index=False)
print(f"Wrote {len(df)} rows to {OUT}")
